C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DICE
OBJECT MODULE PLACED IN .\OBJ\Dice.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\UserCode\Dice.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HardWareCode;..\Har
                    -dWareCode;..\UserCode) DEBUG OBJECTEXTEND PRINT(.\LST\Dice.lst) TABS(2) OBJECT(.\OBJ\Dice.obj)

line level    source

   1          
   2          #include <stdlib.h>
   3          #include <REG_MG82F6D17.h>
   4          #include ".\include\Type.h"
   5          #include ".\include\API_Macro_MG82F6D17.H"
   6          
   7          #include "HardWare.h"
   8          #include "Dice.h"
   9          #include "SPI.h"
  10          #include "Buzzer.h"
  11          #include "LedBoard.h"
  12          #include "Settings.h"
  13          #include "UserInput.h"
  14          
  15          //-----------------------------------------
  16          bit RollDiceCmd        = FALSE;
  17          bit DiceResultReadyFlg = FALSE;
  18          uint32_t DiceRoleTimer;
  19          uint8_t DiceValue;
  20          uint8_t idata DiceRandomVal = 0;
  21          //------------------------------------------
  22          
  23          
  24          //***DICE_MANAGER**************
  25          #define DICE_INIT   0
  26          #define DICE_IDLE   1
  27          #define DICE_ROLL   2
  28          #define DICE_WAIT   4
  29          #define DICE_SHOW_ARROW_ON   5
  30          #define DICE_SHOW_ARROW_OFF  6
  31          #define DICE_RESULT_PREPARE  7
  32          #define PRE_PLAYER_ACTIVATED_1 8
  33          #define PRE_PLAYER_ACTIVATED_2 9
  34          #define PRE_PLAYER_ACTIVATED_3 10
  35          #define SHOW_SETTINGS_NUMBER   11
  36          //*****************************
  37          uint8_t DiceState;
  38          uint8_t ArrowState;
  39          uint8_t RollCount = 0;
  40          uint8_t PlayerClr = 0;
  41          uint8_t idata PrePlayerClr = 0;
  42          bit ArrowPointFlg = 0;
  43          uint8_t idata PreLongPressedCounter;
  44          bit IsDiceRollTimerExpr(void);
  45          void StrtDiceRollTimer(uint32_t TimerVal);
  46          uint8_t random(uint8_t till /*range 1 - till*/);
  47          void RandomDsplyOnSegment(uint8_t randomvalue);
  48          void ShowKiskiBariHai(uint8_t PlayerClr);
  49          void DiceManager(void)
  50          {
  51   1                      uint8_t DummyDiceValue = 0;
  52   1                      switch(DiceState)
  53   1                      {
  54   2                        case DICE_INIT:
C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 2   

  55   2                          DsplyOnSegment(CLEAR_DICE,FALSE);
  56   2                          StrtDiceRollTimer(0);//Initialize Timer
  57   2                          DiceState = DICE_IDLE;
  58   2                        break;
  59   2                        
  60   2                        case DICE_IDLE:
  61   2                        if(RollDiceCmd)
  62   2                        {                                                                                       
             -        
  63   3                          DiceResultReadyFlg = 0;
  64   3                          DiceValue = 0;
  65   3                          RollDiceCmd = 0;
  66   3                          StrtDiceRollTimer(0);
  67   3                          DiceState = DICE_ROLL;
  68   3                        }
  69   2                        else if(ArrowPointFlg)
  70   2                        {
  71   3                          ArrowPointFlg = 0;
  72   3                          PrePlayerClr = PlayerClr;
  73   3                          StrtDiceRollTimer(10);
  74   3                          DiceState = DICE_SHOW_ARROW_ON;
  75   3                        }
  76   2                        break;
  77   2                        
  78   2                        case DICE_ROLL:
  79   2                          if(IsDiceRollTimerExpr())
  80   2                          {
  81   3                          RandomDsplyOnSegment(RollCount);
  82   3                          StrtDiceRollTimer(RollCount*25);//In Milli Second
  83   3                          RollCount++;
  84   3                          if(RollCount == 10)
  85   3                          {
  86   4                            DiceValue = DiceRandomVal;//random(6);
  87   4                            RollCount = 0;                  
  88   4                            DsplyOnSegment(DiceValue,TRUE);//Indcate with dot Result is Ready
  89   4                            StrtDiceRollTimer(1000);
  90   4                            DiceState = DICE_RESULT_PREPARE;
  91   4                          }
  92   3                          else 
  93   3                          {StartBeep(); DiceState = DICE_WAIT;}
  94   3                        }
  95   2                        break;
  96   2                    
  97   2                        case DICE_WAIT:
  98   2                          if(IsDiceRollTimerExpr())
  99   2                          {
 100   3                            StopBeep();
 101   3                            StrtDiceRollTimer(20);
 102   3                            DiceState = DICE_ROLL;
 103   3                          }
 104   2                        break;
 105   2                          
 106   2                        case DICE_SHOW_ARROW_ON:
 107   2                          if(IsDiceRollTimerExpr())
 108   2                          {
 109   3                            ShowKiskiBariHai(PlayerClr);
 110   3                            StrtDiceRollTimer(500);
 111   3                            DiceState = DICE_SHOW_ARROW_OFF;
 112   3                          }
 113   2                          if((BeepDisFlg == 1)&&(KeyPressedFlg == 1)&&(LongPressedCounter > 4))
 114   2                          {
 115   3                            PreLongPressedCounter = 0;
C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 3   

 116   3                            DiceState = SHOW_SETTINGS_NUMBER;
 117   3                          }
 118   2                          break;
 119   2                          
 120   2                        case DICE_SHOW_ARROW_OFF:
 121   2                          if(IsDiceRollTimerExpr())
 122   2                          {
 123   3                            ShowKiskiBariHai(0);
 124   3                            StrtDiceRollTimer(50);
 125   3                            DiceState = DICE_SHOW_ARROW_ON;
 126   3                          }
 127   2                          if(RollDiceCmd)
 128   2                          {DiceState = DICE_IDLE;}
 129   2      
 130   2                          break;
 131   2                          
 132   2                      case DICE_RESULT_PREPARE:
 133   2                           if(IsDiceRollTimerExpr())
 134   2                           {
 135   3                             DiceResultReadyFlg = 1;
 136   3                             StrtDiceRollTimer(5000);
 137   3                             DiceState = PRE_PLAYER_ACTIVATED_1;  
 138   3                           }
 139   2                          break;  
 140   2      
 141   2                      case PRE_PLAYER_ACTIVATED_1:
 142   2                           if(IsDiceRollTimerExpr())
 143   2                           {
 144   3                            ShowKiskiBariHai(PlayerClr);
 145   3                            StrtDiceRollTimer(500); 
 146   3                            DiceState = PRE_PLAYER_ACTIVATED_2;
 147   3                           }
 148   2                           if((PrePlayerClr != PlayerClr)||(RollDiceCmd == 1))
 149   2                           DiceState = DICE_IDLE;
 150   2                          break;  
 151   2                           
 152   2                      case PRE_PLAYER_ACTIVATED_2:
 153   2                           if(IsDiceRollTimerExpr())
 154   2                           {
 155   3                            ShowKiskiBariHai(0);
 156   3                            StrtDiceRollTimer(20);  
 157   3                            DiceState = PRE_PLAYER_ACTIVATED_3;
 158   3                           }
 159   2                           if((PrePlayerClr != PlayerClr)||(RollDiceCmd == 1))
 160   2                           DiceState = DICE_IDLE;
 161   2                          break;
 162   2                            
 163   2                      case PRE_PLAYER_ACTIVATED_3:
 164   2                           if(IsDiceRollTimerExpr())
 165   2                           {
 166   3                            StrtDiceRollTimer(1000);
 167   3                            DsplyOnSegment(DiceValue,TRUE);
 168   3                            DiceState = PRE_PLAYER_ACTIVATED_1; 
 169   3                            }
 170   2                           if((PrePlayerClr != PlayerClr)||(RollDiceCmd == 1))
 171   2                             DiceState = DICE_IDLE;
 172   2                           
 173   2                          if((BeepDisFlg == 1)&&(KeyPressedFlg == 1)&&(LongPressedCounter > 3))
 174   2                          {
 175   3                            PreLongPressedCounter = 0;
 176   3                            DiceState = SHOW_SETTINGS_NUMBER;
 177   3                          }
C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 4   

 178   2                          break;
 179   2                           
 180   2                      case SHOW_SETTINGS_NUMBER:
 181   2                        if(PreLongPressedCounter != LongPressedCounter)
 182   2                        {
 183   3                          PreLongPressedCounter = LongPressedCounter;
 184   3                          DsplyOnSegment(LongPressedCounter,FALSE);
 185   3                        }
 186   2                        else if(KeyPressedFlg == 0)
 187   2                         DiceState = DICE_SHOW_ARROW_ON;
 188   2                        break;
 189   2                            
 190   2                        
 191   2                      }
 192   1                      
 193   1      
 194   1                      
 195   1      
 196   1                      
 197   1      }
 198          //**************************************************************************************
 199          
 200          
 201          
 202          //--------FUNCTIONS FOR DICE MANAGER-----------
 203          uint8_t random(uint8_t till /*range 1 - till*/)
 204          {
 205   1          uint8_t randval = 0;
 206   1          randval= rand();
 207   1          randval = (randval%till);
 208   1          if(randval == 0)
 209   1          randval = till;
 210   1          return randval;
 211   1      }
 212          
 213          void StrtDiceRollTimer(uint32_t TimerVal)
 214          {
 215   1        DiceRoleTimer = TimerVal;
 216   1      }
 217          
 218          bit IsDiceRollTimerExpr(void)
 219          {
 220   1        if(DiceRoleTimer == 0)
 221   1        return 1;
 222   1        else
 223   1        return 0;
 224   1      }
 225          //----------------------------------------------
 226          
 227          
 228          
 229          //----FUNC FOR MANAGE TIMER---------------------
 230          void DiceTimer(void)
 231          {
 232   1        if(DiceRoleTimer>0)
 233   1        {
 234   2          DiceRoleTimer--;
 235   2        }
 236   1        
 237   1        DiceRandomVal++;
 238   1        if(DiceRandomVal == 7)
 239   1        { DiceRandomVal = 1;}
C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 5   

 240   1      }
 241          //----------------------------------------------
 242          
 243          
 244          //******************************************
 245          //These Function will be used by User Layer
 246          uint8_t ReadDiceValue(void)
 247          {
 248   1        if(DiceResultReadyFlg == 1)
 249   1        return DiceValue;
 250   1        else 
 251   1        return 0;
 252   1      }
 253          void RollTheDice(void)
 254          {
 255   1        RollDiceCmd = TRUE;
 256   1        DiceValue = 0;
 257   1        DiceResultReadyFlg=0;
 258   1      }
 259          //*******************************************
 260          
 261          
 262          
 263          //************Driver For 7 Segment****************************
 264          
 265          
 266          
 267          void DsplyOnSegment(uint8_t Number, bit DotPrintTrueFalse)
 268          {
 269   1        uint8_t value = 0;
 270   1        if(DotPrintTrueFalse){value |= DOT;}
 271   1        if(Number == CLEAR_DICE){value = 0;}
 272   1          switch(Number)
 273   1          {
 274   2            case 0x00:value |= ZERO;  break;
 275   2            case 0x01:value |= ONE;   break; 
 276   2            case 0x02:value |= TWO;   break;
 277   2            case 0x03:value |= THREE; break;
 278   2            case 0x04:value |= FOUR;  break;
 279   2            case 0x05:value |= FIVE;  break; 
 280   2            case 0x06:value |= SIX;   break;  
 281   2            case 0x07:value |= SEVEN; break; 
 282   2            case 0x08:value |= EIGHT; break;
 283   2            case 0x09:value |= NINE;  break;
 284   2          }
 285   1      
 286   1        SPI_tranfer(value);
 287   1        digitalWrite(DICE_LATCH_PIN,0);   
 288   1        digitalWrite(DICE_LATCH_PIN,1);
 289   1      
 290   1      }
 291          //************************************************
 292          
 293          void RandomDsplyOnSegment(uint8_t randomvalue)
 294          {
 295   1        uint8_t value = 0;
 296   1        switch(randomvalue)
 297   1        {
 298   2            case 0x00:value |= A;  break;
 299   2            case 0x01:value |= F;   break; 
 300   2            case 0x02:value |= D;   break;
 301   2            case 0x03:value |= F; break;
C51 COMPILER V9.60.0.0   DICE                                                              10/30/2023 23:23:23 PAGE 6   

 302   2            case 0x04:value |= A;  break;
 303   2            case 0x05:value |= G;  break; 
 304   2            case 0x06:value |= B;   break;  
 305   2            case 0x07:value |= E; break; 
 306   2            case 0x08:value |= C; break;
 307   2            case 0x09:value |= F;  break;
 308   2        }
 309   1        SPI_tranfer(value);
 310   1        digitalWrite(DICE_LATCH_PIN,0);   
 311   1        digitalWrite(DICE_LATCH_PIN,1);
 312   1      }
 313          
 314          void ShowKiskiBariHai(uint8_t PlayerClr)
 315          {
 316   1        uint8_t value = 0;
 317   1        switch(PlayerClr)
 318   1        {
 319   2          case RED:value |= A|G;break;
 320   2          case BLUE:value |= A|B;break;
 321   2          case GREEN:value |= C|D;break;
 322   2          case YELLOW:value |= E|D;break;       
 323   2        }
 324   1        
 325   1        SPI_tranfer(value);
 326   1        digitalWrite(DICE_LATCH_PIN,0);   
 327   1        digitalWrite(DICE_LATCH_PIN,1);
 328   1      }
 329          
 330          
 331          void SetArrowPointTo(uint8_t PlyrClr)
 332          {
 333   1        ArrowPointFlg = 1;PlayerClr = PlyrClr;
 334   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    828    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =      3    ----
   BIT SIZE         =      3       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
